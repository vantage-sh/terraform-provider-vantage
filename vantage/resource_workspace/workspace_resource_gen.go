// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_workspace

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func WorkspaceResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"created_at": schema.StringAttribute{
				Computed:            true,
				Description:         "The date and time, in UTC, the Workspace was created. ISO 8601 Formatted.",
				MarkdownDescription: "The date and time, in UTC, the Workspace was created. ISO 8601 Formatted.",
			},
			"currency": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Currency code for the workspace.",
				MarkdownDescription: "Currency code for the workspace.",
			},
			"enable_currency_conversion": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable currency conversion for the workspace.",
				MarkdownDescription: "Enable currency conversion for the workspace.",
				Default:             booldefault.StaticBool(true),
			},
			"exchange_rate_date": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The date to use for currency conversion.",
				MarkdownDescription: "The date to use for currency conversion.",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"daily_rate",
						"end_of_billing_period_rate",
					),
				},
				Default: stringdefault.StaticString("daily_rate"),
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "The id of the workspace",
				MarkdownDescription: "The id of the workspace",
			},
			"name": schema.StringAttribute{
				Required:            true,
				Description:         "Name of the workspace.",
				MarkdownDescription: "Name of the workspace.",
			},
			"token": schema.StringAttribute{
				Computed:            true,
				Description:         "The token of the workspace",
				MarkdownDescription: "The token of the workspace",
			},
		},
	}
}

type WorkspaceModel struct {
	CreatedAt                types.String `tfsdk:"created_at"`
	Currency                 types.String `tfsdk:"currency"`
	EnableCurrencyConversion types.Bool   `tfsdk:"enable_currency_conversion"`
	ExchangeRateDate         types.String `tfsdk:"exchange_rate_date"`
	Id                       types.String `tfsdk:"id"`
	Name                     types.String `tfsdk:"name"`
	Token                    types.String `tfsdk:"token"`
}
