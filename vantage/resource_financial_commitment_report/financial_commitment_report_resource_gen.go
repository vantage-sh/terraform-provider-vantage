// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_financial_commitment_report

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func FinancialCommitmentReportResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"created_at": schema.StringAttribute{
				Computed:            true,
				Description:         "The date and time, in UTC, the report was created. ISO 8601 Formatted.",
				MarkdownDescription: "The date and time, in UTC, the report was created. ISO 8601 Formatted.",
			},
			"date_bucket": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The date bucket of the FinancialCommitmentReport.",
				MarkdownDescription: "The date bucket of the FinancialCommitmentReport.",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"hour",
						"day",
						"week",
						"month",
					),
				},
			},
			"date_interval": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The date interval of the FinancialCommitmentReport. Unless 'custom' is used, this is incompatible with 'start_date' and 'end_date' parameters. Defaults to 'last_3_months'.",
				MarkdownDescription: "The date interval of the FinancialCommitmentReport. Unless 'custom' is used, this is incompatible with 'start_date' and 'end_date' parameters. Defaults to 'last_3_months'.",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"this_month",
						"last_7_days",
						"last_30_days",
						"last_month",
						"last_3_months",
						"last_6_months",
						"custom",
						"last_12_months",
						"last_24_months",
						"last_36_months",
						"year_to_date",
						"last_3_days",
						"last_14_days",
					),
				},
			},
			"default": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates whether the FinancialCommitmentReport is the default report.",
				MarkdownDescription: "Indicates whether the FinancialCommitmentReport is the default report.",
			},
			"end_date": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The end date of the FinancialCommitmentReport. YYYY-MM-DD formatted. Incompatible with 'date_interval' parameter.",
				MarkdownDescription: "The end date of the FinancialCommitmentReport. YYYY-MM-DD formatted. Incompatible with 'date_interval' parameter.",
			},
			"filter": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The filter query language to apply to the FinancialCommitmentReport. Additional documentation available at https://docs.vantage.sh/vql.",
				MarkdownDescription: "The filter query language to apply to the FinancialCommitmentReport. Additional documentation available at https://docs.vantage.sh/vql.",
			},
			"groupings": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "Grouping values for aggregating costs on the FinancialCommitmentReport. Valid groupings: cost_type, commitment_type, service, resource_account_id, provider_account_id, region, cost_category, cost_sub_category, instance_type, tag, tag:<label_name>.",
				MarkdownDescription: "Grouping values for aggregating costs on the FinancialCommitmentReport. Valid groupings: cost_type, commitment_type, service, resource_account_id, provider_account_id, region, cost_category, cost_sub_category, instance_type, tag, tag:<label_name>.",
			},
			"on_demand_costs_scope": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The scope for the costs. Possible values: discountable, all.",
				MarkdownDescription: "The scope for the costs. Possible values: discountable, all.",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"discountable",
						"all",
					),
				},
			},
			"start_date": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The start date of the FinancialCommitmentReport. YYYY-MM-DD formatted. Incompatible with 'date_interval' parameter.",
				MarkdownDescription: "The start date of the FinancialCommitmentReport. YYYY-MM-DD formatted. Incompatible with 'date_interval' parameter.",
			},
			"title": schema.StringAttribute{
				Required:            true,
				Description:         "The title of the FinancialCommitmentReport.",
				MarkdownDescription: "The title of the FinancialCommitmentReport.",
			},
			"token": schema.StringAttribute{
				Computed:            true,
				Description:         "The token of the report",
				MarkdownDescription: "The token of the report",
			},
			"user_token": schema.StringAttribute{
				Computed:            true,
				Description:         "The token for the User who created this FinancialCommitmentReport.",
				MarkdownDescription: "The token for the User who created this FinancialCommitmentReport.",
			},
			"workspace_token": schema.StringAttribute{
				Required:            true,
				Description:         "The Workspace in which the FinancialCommitmentReport will be created.",
				MarkdownDescription: "The Workspace in which the FinancialCommitmentReport will be created.",
			},
		},
	}
}

type FinancialCommitmentReportModel struct {
	CreatedAt          types.String `tfsdk:"created_at"`
	DateBucket         types.String `tfsdk:"date_bucket"`
	DateInterval       types.String `tfsdk:"date_interval"`
	Default            types.Bool   `tfsdk:"default"`
	EndDate            types.String `tfsdk:"end_date"`
	Filter             types.String `tfsdk:"filter"`
	Groupings          types.List   `tfsdk:"groupings"`
	OnDemandCostsScope types.String `tfsdk:"on_demand_costs_scope"`
	StartDate          types.String `tfsdk:"start_date"`
	Title              types.String `tfsdk:"title"`
	Token              types.String `tfsdk:"token"`
	UserToken          types.String `tfsdk:"user_token"`
	WorkspaceToken     types.String `tfsdk:"workspace_token"`
}
