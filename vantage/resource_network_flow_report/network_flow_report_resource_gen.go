// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_network_flow_report

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func NetworkFlowReportResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"created_at": schema.StringAttribute{
				Computed:            true,
				Description:         "The date and time, in UTC, the report was created. ISO 8601 Formatted.",
				MarkdownDescription: "The date and time, in UTC, the report was created. ISO 8601 Formatted.",
			},
			"created_by_token": schema.StringAttribute{
				Computed:            true,
				Description:         "The token for the User or Team that created this NetworkFlowReport.",
				MarkdownDescription: "The token for the User or Team that created this NetworkFlowReport.",
			},
			"date_interval": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The date interval of the NetworkFlowReport. Unless 'custom' is used, this is incompatible with 'start_date' and 'end_date' parameters. Defaults to 'last_7_days'.",
				MarkdownDescription: "The date interval of the NetworkFlowReport. Unless 'custom' is used, this is incompatible with 'start_date' and 'end_date' parameters. Defaults to 'last_7_days'.",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"last_3_days",
						"last_7_days",
						"custom",
					),
				},
			},
			"default": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates whether the NetworkFlowReport is the default report.",
				MarkdownDescription: "Indicates whether the NetworkFlowReport is the default report.",
			},
			"end_date": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The end date of the NetworkFlowReport. YYYY-MM-DD formatted. Incompatible with 'date_interval' parameter.",
				MarkdownDescription: "The end date of the NetworkFlowReport. YYYY-MM-DD formatted. Incompatible with 'date_interval' parameter.",
			},
			"filter": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The filter query language to apply to the NetworkFlowReport. Additional documentation available at https://docs.vantage.sh/vql.",
				MarkdownDescription: "The filter query language to apply to the NetworkFlowReport. Additional documentation available at https://docs.vantage.sh/vql.",
			},
			"flow_direction": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The flow direction of the NetworkFlowReport.",
				MarkdownDescription: "The flow direction of the NetworkFlowReport.",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"ingress",
						"egress",
					),
				},
			},
			"flow_weight": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The dimension by which the logs in the report are sorted. Defaults to costs.",
				MarkdownDescription: "The dimension by which the logs in the report are sorted. Defaults to costs.",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"costs",
						"bytes",
					),
				},
			},
			"groupings": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "Grouping values for aggregating data on the NetworkFlowReport. Valid groupings: account_id, az_id, dstaddr, dsthostname, flow_direction, interface_id, instance_id, peer_resource_uuid, peer_account_id, peer_vpc_id, peer_region, peer_az_id, peer_subnet_id, peer_interface_id, peer_instance_id, region, resource_uuid, srcaddr, srchostname, subnet_id, traffic_category, traffic_path, vpc_id.",
				MarkdownDescription: "Grouping values for aggregating data on the NetworkFlowReport. Valid groupings: account_id, az_id, dstaddr, dsthostname, flow_direction, interface_id, instance_id, peer_resource_uuid, peer_account_id, peer_vpc_id, peer_region, peer_az_id, peer_subnet_id, peer_interface_id, peer_instance_id, region, resource_uuid, srcaddr, srchostname, subnet_id, traffic_category, traffic_path, vpc_id.",
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "The id of the report",
				MarkdownDescription: "The id of the report",
			},
			"start_date": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The start date of the NetworkFlowReport. YYYY-MM-DD formatted. Incompatible with 'date_interval' parameter.",
				MarkdownDescription: "The start date of the NetworkFlowReport. YYYY-MM-DD formatted. Incompatible with 'date_interval' parameter.",
			},
			"title": schema.StringAttribute{
				Required:            true,
				Description:         "The title of the NetworkFlowReport.",
				MarkdownDescription: "The title of the NetworkFlowReport.",
			},
			"token": schema.StringAttribute{
				Computed:            true,
				Description:         "The token of the report",
				MarkdownDescription: "The token of the report",
			},
			"workspace_token": schema.StringAttribute{
				Required:            true,
				Description:         "The Workspace in which the NetworkFlowReport will be created.",
				MarkdownDescription: "The Workspace in which the NetworkFlowReport will be created.",
			},
		},
	}
}

type NetworkFlowReportModel struct {
	CreatedAt      types.String `tfsdk:"created_at"`
	CreatedByToken types.String `tfsdk:"created_by_token"`
	DateInterval   types.String `tfsdk:"date_interval"`
	Default        types.Bool   `tfsdk:"default"`
	EndDate        types.String `tfsdk:"end_date"`
	Filter         types.String `tfsdk:"filter"`
	FlowDirection  types.String `tfsdk:"flow_direction"`
	FlowWeight     types.String `tfsdk:"flow_weight"`
	Groupings      types.List   `tfsdk:"groupings"`
	Id             types.String `tfsdk:"id"`
	StartDate      types.String `tfsdk:"start_date"`
	Title          types.String `tfsdk:"title"`
	Token          types.String `tfsdk:"token"`
	WorkspaceToken types.String `tfsdk:"workspace_token"`
}
